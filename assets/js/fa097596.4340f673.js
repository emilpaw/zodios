"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[861],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(r),m=o,f=c["".concat(l,".").concat(m)]||c[m]||d[m]||a;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},2938:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:3},i="Zodios Router",s={unversionedId:"server/express-router",id:"server/express-router",title:"Zodios Router",description:"Zodios Router allows you to split your API endpoints into different files. You need attach an API definition for each router for them to be typesafe and give you autocompletion.",source:"@site/docs/server/express-router.md",sourceDirName:"server",slug:"/server/express-router",permalink:"/docs/server/express-router",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Zodios Application",permalink:"/docs/server/express-app"},next:{title:"Next integration",permalink:"/docs/server/next"}},l={},p=[{value:"<code>zodiosRouter</code>",id:"zodiosrouter",level:2},{value:"<code>ctx.router</code>",id:"ctxrouter",level:2},{value:"Options",id:"options",level:2},{value:"Examples",id:"examples",level:2},{value:"Express Router from context",id:"express-router-from-context",level:3},{value:"Merge multiple routers",id:"merge-multiple-routers",level:3}],u={toc:p};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"zodios-router"},"Zodios Router"),(0,o.kt)("p",null,"Zodios Router allows you to split your API endpoints into different files. You need attach an API definition for each router for them to be typesafe and give you autocompletion."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"For more information on how to use express Router, check out the ",(0,o.kt)("a",{parentName:"p",href:"https://expressjs.com/en/guide/routing.html"},"Express documentation"))),(0,o.kt)("h2",{id:"zodiosrouter"},(0,o.kt)("inlineCode",{parentName:"h2"},"zodiosRouter")),(0,o.kt)("p",null,"To upgrade an existing express router with typesafety, replace your ",(0,o.kt)("inlineCode",{parentName:"p"},"express.Router()")," calls to ",(0,o.kt)("inlineCode",{parentName:"p"},"zodiosRouter(api)"),".  "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"function zodiosRouter(api?: ZodiosEndpointDescriptions, options?: ZodiosRouterOptions): ZodiosRouter\n")),(0,o.kt)("h2",{id:"ctxrouter"},(0,o.kt)("inlineCode",{parentName:"h2"},"ctx.router")),(0,o.kt)("p",null,"You can also create a context aware express router with ",(0,o.kt)("inlineCode",{parentName:"p"},"ctx.router"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"Context.router(api?: ZodiosEndpointDescriptions, options?: ZodiosRouterOptions): ZodiosRouter\n")),(0,o.kt)("h2",{id:"options"},"Options"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Property"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"router"),(0,o.kt)("td",{parentName:"tr",align:null},"express.Router"),(0,o.kt)("td",{parentName:"tr",align:null},"optional express router - default to express.Router()")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"enableJsonBodyParser"),(0,o.kt)("td",{parentName:"tr",align:null},"boolean"),(0,o.kt)("td",{parentName:"tr",align:null},"enable json body parser - default to true")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"validate"),(0,o.kt)("td",{parentName:"tr",align:null},"boolean"),(0,o.kt)("td",{parentName:"tr",align:null},"enable zod input validation - default to true")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"transform"),(0,o.kt)("td",{parentName:"tr",align:null},"boolean"),(0,o.kt)("td",{parentName:"tr",align:null},"enable zod input transformation - default to false")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"caseSensitive"),(0,o.kt)("td",{parentName:"tr",align:null},"boolean"),(0,o.kt)("td",{parentName:"tr",align:null},"enable case sensitive path matching - default to false")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"strict"),(0,o.kt)("td",{parentName:"tr",align:null},"boolean"),(0,o.kt)("td",{parentName:"tr",align:null},"enable strict path matching - default to false")))),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"express-router-from-context"},"Express Router from context"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'\nimport { zodiosContext } from "@zodios/express";\nimport z from "zod";\nimport { userApi } from "../../common/api";\nimport { userMiddleware } from "./userMiddleware";\n\nconst ctx = zodiosContext({\n  user: z.object({\n    id: z.number(),\n    name: z.string(),\n    isAdmin: z.boolean(),\n  }),\n});\n\nconst router = ctx.router();\n\n// middleware that adds the user to the context\nrouter.use(userMiddleware);\n')),(0,o.kt)("h3",{id:"merge-multiple-routers"},"Merge multiple routers"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { zodiosApp, zodiosRouter } from "@zodios/express";\n\nconst app = zodiosApp(); // just an axpess app with type annotations\nconst userRouter = zodiosRouter(userApi); // just an express router with type annotations and validation middlewares\nconst adminRouter = zodiosRouter(adminApi); // just an express router with type annotations and validation middlewares\n\nconst app.use(userRouter,adminRouter);\n\napp.listen(3000);\n')),(0,o.kt)("p",null,"or context aware"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { zodiosContext } from "@zodios/express";\n\nconst ctx = zodiosContext({\n  user: z.object({\n    id: z.number(),\n    name: z.string(),\n    isAdmin: z.boolean(),\n  }),\n});\n\nconst app = ctx.app();\nconst userRouter = ctx.router(userApi);\nconst adminRouter = ctx.router(adminApi);\n\napp.use(userRouter,adminRouter);\n\napp.listen(3000);\n')))}d.isMDXComponent=!0}}]);